# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"
appName=ras-api

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="iQYVJVhkXykMKBzvGw41hguSvZobTKjTA1PAYJl96JOujyVoH0S1E0dOOKaF8osh"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes

play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.rasapi.modules.APiModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.http.errorHandler = "uk.gov.hmrc.rasapi.config.RasErrorHandler"

# Uncomment below lines when previewing application.yaml file locally in case of CORS errors
# play.filters.enabled += "play.filters.cors.CORSFilter"
# play.filters.cors {
#   allowedOrigins = ["http://localhost:9680"]
# }

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

  uk.gov.hmrc.rasapi.controllers.LookupController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = true
    }
    uk.gov.hmrc.rasapi.controllers.Documentation = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }
    uk.gov.hmrc.rasapi.controllers.FileController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }
    uk.gov.hmrc.rasapi.controllers.FileProcessingController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

api {
    context = "individuals/relief-at-source"
    status="BETA"
    endpointsEnabled=true
}

# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

mongodb {
    uri = "mongodb://localhost:27017/ras-api"
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host=localhost
            port=8500
        }

        datastream {
            host = localhost
            port = 8100
        }
        file-upload {
            host = localhost
            port = 8898
        }

        cachable {
            short-lived-cache {
              host = localhost
              port = 9272
              domain = save4later
            }
        }

        des {
            host = localhost
            port = 9670
            Environment = environment
            authorization = key
        }
    }
}

file-upload-url-suffix = "file-upload/envelopes"
desauthtoken = K1gbAD4vVreR0yoJmdd9bUp5RXwByLXfh
environment = local
results.expiry.time = 3600
request-retry-limit = 3
retry-delay = 700
toggle-feature{
    allow-no-next-year-status = false
    allow-default-ruk = true
    retry-enabled = false
    bulk-retry-enabled = false
}

status {
    deceased = "DECEASED"
    do-not-re-process = "DO_NOT_RE_PROCESS"
    too-many-requests= "TOO_MANY_REQUESTS"
    matching-failed{
        api = "STATUS_UNAVAILABLE"
        csv = "cannot_provide_status"
    }

    internal-server-error{
        api = "INTERNAL_SERVER_ERROR"
        csv = "problem-getting-status"
    }
    service-unavailable = "SERVICE_UNAVAILABLE"
}
remove-chunks-data-exercise.enabled = false
api-v2_0.enabled = true