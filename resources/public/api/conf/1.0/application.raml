#%RAML 1.0
---

title: Relief at source residency checker
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Versioning
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
  - title: Testing the API
    content: !include documentation/testing-approach.md

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  UUID:
    type: string
    pattern: "^[0-9A-Fa-f]{8}(-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$"
    example: "6b853b58-625f-4e64-955e-43a7cdff5c03"

/relief-at-source:
      /customer:
            /{customer-uuid}:
              /residency-status:
                description: Check if the customer is resident in Scotland for tax purposes.

                             If you’re a pension scheme administrator, you need to know this to make the correct
                             relief at source claims.
                displayName: Check if a customer is a Scottish resident
                uriParameters:
                  customer-uuid:
                    type: UUID
                    example: "6b853b58-625f-4e64-955e-43a7cdff5c03"
                get:
                  description: Check if the customer is resident in Scotland for tax purposes.

                               If you’re a pension scheme administrator, you need to know this to make the correct
                               relief at source claims.
                  displayName: Check if a customer is a Scottish resident
                  is: [headers.acceptHeader]
                  (annotations.scope): "read:ras"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "read:ras" ] } ]
                  (annotations.sandboxData): !include testdata/get-residency-status.md
                  responses:
                    200:
                      body:
                        application/json:
                          type: !include schemas/getResidencyStatus.schema.json
                          example: |
                            {
                              "currentYearResidencyStatus" : "otherUKResident",
                              "nextYearForecastResidencyStatus" : "scotResident"
                            }
                    400:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          description: Invalid UUID format. Use the UUID provided.
                          example: |
                            {
                              "code" : "INVALID_FORMAT",
                              "message" : "Invalid UUID format. Use the UUID provided."
                            }
                    401:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          description: Unauthorized
                          example: |
                            {
                              "code" : "UNAUTHORIZED",
                              "message" : "Not an authorised User to use matching API endpoint"
                            }
                    403:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            invalidUUID:
                              description: |
                                  The match has timed out and the UUID is no longer valid.
                                  The match (POST to /match) will need to repeated.
                              value: |
                                {
                                  "code": "INVALID_UUID",
                                  "message": "The match has timed out and the UUID is no longer valid. The match (POST to /match) will need to repeated."
                                }
                            accountLocked:
                              description: There is a problem with this member's account. Ask them to call HMRC.
                              value: |
                                {
                                  "code": "INVALID_RESIDENCY_STATUS",
                                  "message": "There is a problem with this member's account. Ask them to call HMRC."
                                }
                    404:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            ResourceNotFound:
                              description: Resource Not Found
                              value: |
                                {
                                  "code" : "NOT_FOUND",
                                  "message" : "Resource Not Found"
                                }
                    406:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            headerInvalid:
                              description: Accept header invalid
                              value: |
                                {
                                  "code" : "ACCEPT_HEADER_INVALID",
                                  "message" : "Accept header invalid"
                                }
                    500:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                           internalServerError :
                              description: Internal Server Error
                              value: |
                                {
                                  "code" : "INTERNAL_SERVER_ERROR",
                                  "message" : "Internal Server Error"
                                }
